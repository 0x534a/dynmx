# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# Configuration file for the Access Activity Model (Cuckoo and CAPE sandbox)

# --------------------------------------------
# Filesystem
# --------------------------------------------
filesystem:
# Kernel system calls for filesystem
  - api_call_name: "^(Nt|Zw)CreateFile$"
    handle_returned_in: "FileHandle"
    path_param: "FileName"
    operation: "create"
  - api_call_name: "NtCreatePagingFile$"
    path_param: "PageFileName"
    operation: "write"
  - api_call_name: "^(Nt|Zw)DeleteFile$"
    path_param: "FileName"
    operation: "delete"
  - api_call_name: "^(Nt|Zw)FlushBuffersFile$"
    handle_param: "FileHandle"
    operation: "write"
  - api_call_name: "^(Nt|Zw)LockFile$"
    handle_param: "FileHandle"
    operation: "read"
  - api_call_name: "^(Nt|Zw)UnlockFile$"
    handle_param: "FileHandle"
    operation: "read"
  - api_call_name: "^(Nt|Zw)OpenFile$"
    handle_returned_in: "FileHandle"
    path_param: "FileName"
    operation: "read"
  - api_call_name: "^(Nt|Zw)OpenProcess$"
    path_param: "FileName"
    operation: "execute"
  - api_call_name: "^(Nt|Zw)QueryAttributesFile$"
    path_param: "FileName"
    operation: "read"
  - api_call_name: "^(Nt|Zw)QueryDirectoryFile$"
    handle_param: "FileHandle"
    operation: "read"
  - api_call_name: "^(Nt|Zw)QueryEaFile$"
    handle_param: "FileHandle"
    operation: "read"
  - api_call_name: "^(Nt|Zw)QueryAttributesFile$"
    path_param: "FileName"
    operation: "read"
  - api_call_name: "^(Nt|Zw)QueryFullAttributesFile$"
    path_param: "FileName"
    operation: "read"
  - api_call_name: "^(Nt|Zw)QueryInformationFile$"
    handle_param: "FileHandle"
    operation: "read"
  - api_call_name: "^(Nt|Zw)QueryInformationFile$"
    handle_param: "FileHandle"
    operation: "read"
  - api_call_name: "^(Nt|Zw)QueryQuotaInformationFile$"
    handle_param: "FileHandle"
    operation: "read"
  - api_call_name: "^(Nt|Zw)QueryVolumeInformationFile$"
    handle_param: "FileHandle"
    operation: "read"
  - api_call_name: "^(Nt|Zw)ReadFile$"
    handle_param: "FileHandle"
    operation: "read"
  - api_call_name: "^(Nt|Zw)ReadFileScatter$"
    handle_param: "FileHandle"
    operation: "read"
  - api_call_name: "^(Nt|Zw)SetEaFile$"
    handle_param: "FileHandle"
    operation: "write"
  - api_call_name: "^(Nt|Zw)SetInformationFile$"
    handle_param: "FileHandle"
    operation: "write"
  - api_call_name: "^(Nt|Zw)SetQuotaInformationFile$"
    handle_param: "FileHandle"
    operation: "write"
  - api_call_name: "^(Nt|Zw)SetVolumeInformationFile$"
    handle_param: "FileHandle"
    operation: "write"
  - api_call_name: "^(Nt|Zw)WriteFile$"
    handle_param: "FileHandle"
    operation: "write"
  - api_call_name: "^(Nt|Zw)WriteFileGather$"
    handle_param: "FileHandle"
    operation: "write"
  - api_call_name: "LdrLoadDll"
    path_param: "FileName"
    operation: "execute"
  - api_call_name: "^LoadLibrary(Ex|)[AW]$"
    path_param: "LibFileName"
    handle_returned_in: "return"
    operation: "execute"
# Userland API calls for filesystem
  - api_call_name: "^CreateFile[AW]$"
    handle_returned_in: "return"
    path_param: "FileName"
    operation: "create"
  - api_call_name: "fopen"
    handle_returned_in: "return"
    path_param: "FileName"
    operation: "read"
  - api_call_name: "ReadFile"
    handle_param: "FileHandle"
    operation: "read"
  - api_call_name: "WriteFile"
    handle_param: "FileHandle"
    operation: "write"
  - api_call_name: "^CreateProcess[AW]$"
    path_param: "ApplicationName"
    cmd_line_param: "CommandLine"
    operation: "execute"
  - api_call_name: "^CopyFile(Ex|)[AW]$"
    path_param: "ExistingFileName"
    operation: "read"
  - api_call_name: "^CopyFile(Ex|)[AW]$"
    path_param: "NewFileName"
    operation: "create"
  - api_call_name: "^CreateFileMapping[AW]$"
    handle_param: "FileHandle"
    operation: "read"
  - api_call_name: "^DeleteFile[AW]$"
    path_param: "FileName"
    operation: "delete"
  - api_call_name: "FlushFileBuffers"
    handle_param: "FileHandle"
    operation: "write"
  - api_call_name: "^GetFileAttributes(Ex|)[AW]$"
    path_param: "FileName"
    operation: "read"
  - api_call_name: "^GetFileSize(Ex|)$"
    handle_param: "FileHandle"
    operation: "read"
  - api_call_name: "GetFileTime"
    handle_param: "FileHandle"
    operation: "read"
  - api_call_name: "GetFileType"
    handle_param: "FileHandle"
    operation: "read"
  - api_call_name: "^GetFileVersionInfo[AW]$"
    path_param: "FileName"
    operation: "read"
  - api_call_name: "^GetFileVersionInfoSize[AW]$"
    path_param: "FileName"
    operation: "read"
  - api_call_name: "^GetFileVersionInfoSizeEx[AW]$"
    path_param: "FileName"
    operation: "read"
  - api_call_name: "^GetModuleFileName(Ex|)[AW]$"
    path_param: "FileName"
    operation: "read"
  - api_call_name: "^GetMappedFileName[AW]$"
    path_param: "Filename"
    operation: "read"
  - api_call_name: "^GetPrivateProfile(Int|String)[AW]$"
    path_param: "Filename"
    operation: "read"
  - api_call_name: "^GetPrivateProfileSection(Names|)[AW]$"
    path_param: "Filename"
    operation: "read"
  - api_call_name: "^GetTempFileName[AW]$"
    path_param: "TempFileName"
    operation: "create"
  - api_call_name: "ICreateErrorInfo:SetHelpFile"
    path_param: "HelpFile"
    operation: "read"
  - api_call_name: "ICreateTypeLib:SetHelpFileName"
    path_param: "HelpFileName"
    operation: "read"
  - api_call_name: "IErrorInfo:GetHelpFile"
    path_param: "HelpFile"
    operation: "read"
  - api_call_name: "IoCreateFile"
    handle_returned_in: "FileHandle"
    path_param: "ObjectName"
    operation: "create"
  - api_call_name: "IFileOperation:CopyItem"
    handle_param: "Item"
    operation: "read"
  - api_call_name: "IFileOperation:CopyItem"
    handle_param: "DestinationFolder"
    file_name_param: "CopyName"
    operation: "create"
  - api_call_name: "^(Lock|Unlock)File(Ex|)$"
    handle_param: "FileHandle"
    operation: "read"
  - api_call_name: "SetEndOfFile"
    handle_param: "FileHandle"
    operation: "write"
  - api_call_name: "SetFileTime"
    handle_param: "FileHandle"
    operation: "write"
  - api_call_name: "^MoveFile(Ex|)[AW]$"
    path_param: "ExistingFileName"
    operation: "delete"
  - api_call_name: "^MoveFile(Ex|)[AW]$"
    path_param: "NewFileName"
    operation: "create"
  - api_call_name: "^MoveFileWithProgress[AW]$"
    path_param: "ExistingFileName"
    operation: "delete"
  - api_call_name: "^MoveFileWithProgress[AW]$"
    path_param: "NewFileName"
    operation: "create"
  - api_call_name: "NetFwAuthorizedApplication:INetFwAuthorizedApplication:put_ProcessImageFileName"
    path_param: "ProcessImageFileName"
    operation: "read"
  - api_call_name: "^PathFileExists[AW]$"
    path_param: "Path"
    operation: "read"
  - api_call_name: "^SetFile(Attributes|Security)[AW]?$"
    path_param: "FileName"
    operation: "write"
  - api_call_name: "SHCreateItemFromParsingName"
    handle_returned_in: "ppv"
    path_param: "Path"
    operation: "read"
  - api_call_name: "^ShellExecute(Ex|)[AW]$"
    path_param: "File"
    operation: "execute"
  - api_call_name: "^SHFileOperation[AW]$"
    path_param: "From"
    operation: "read"
  - api_call_name: "^SHFileOperation[AW]$"
    path_param: "To"
    operation: "create"
  - api_call_name: "^SHGetFileInfo[AW]$"
    path_param: "Path"
    operation: "read"
  - api_call_name: "^URLDownloadToFile[AW]$"
    path_param: "FileName"
    operation: "create"
  - api_call_name: "^WritePrivateProfileString[AW]$"
    path_param: "FileName"
    operation: "write"

# --------------------------------------------
# Registry
# --------------------------------------------
registry:
# Kernel system calls for registry
  - api_call_name: "^(Nt|Zw)CreateKey(Transacted|)$"
    handle_returned_in: "KeyHandle"
    path_param: "ObjectAttributes"
    operation: "create"
  - api_call_name: "^(Nt|Zw)OpenKey(Transacted|)(Ex|)$"
    handle_returned_in: "KeyHandle"
    path_param: "ObjectAttributes"
    operation: "read"
  - api_call_name: "^(Nt|Zw)DeleteKey$"
    handle_param: "KeyHandle"
    operation: "delete"
  - api_call_name: "^(Nt|Zw)DeleteValueKey$"
    handle_param: "KeyHandle"
    path_param: "ValueName"
    operation: "delete"
  - api_call_name: "^(Nt|Zw)QueryKey$"
    handle_param: "KeyHandle"
    path_param: "KeyName"
    operation: "read"
  - api_call_name: "^(Nt|Zw)QueryKeyValue$"
    handle_param: "KeyHandle"
    path_param: "ValueName"
    operation: "read"
  - api_call_name: "^(Nt|Zw)EnumerateKey$"
    handle_param: "KeyHandle"
    path_param: "KeyName"
    operation: "read"
  - api_call_name: "^(Nt|Zw)EnumerateValueKey"
    handle_param: "KeyHandle"
    operation: "read"
  - api_call_name: "^(Nt|Zw)FlushKey"
    handle_param: "KeyHandle"
    operation: "write"
  - api_call_name: "^(Nt|Zw)SetValueKey$"
    handle_param: "KeyHandle"
    path_param: "ValueName"
    operation: "write"
# Userland API calls for registry
  - api_call_name: "^RegCreateKey(Ex|)[AW]$"
    handle_param: "Registry"
    handle_returned_in: "Handle"
    path_param: "SubKey"
    operation: "create"
  - api_call_name: "^RegOpenKey(Ex|)[AW]$"
    handle_param: "Registry"
    handle_returned_in: "Handle"
    path_param: "SubKey"
    operation: "read"
  - api_call_name: "^RegDeleteKey(Ex|)[AW]$"
    handle_param: "Handle"
    path_param: "SubKey"
    operation: "delete"
  - api_call_name: "^RegDeleteValue(Ex|)[AW]$"
    handle_param: "Handle"
    path_param: "ValueName"
    operation: "delete"
  - api_call_name: "^RegEnumKey(Ex|)[AW]$"
    handle_param: "Handle"
    path_param: "Name"
    operation: "read"
  - api_call_name: "^RegEnumValue(Ex|)[AW]$"
    handle_param: "Handle"
    path_param: "ValueName"
    operation: "read"
  - api_call_name: "RegFlusHandle"
    handle_param: "Handle"
    operation: "write"
  - api_call_name: "^RegGetValue[AW]$"
    handle_param: "Handle"
    path_param: "SubKey"
    value_param: "Value"
    operation: "read"
  - api_call_name: "RegNotifyChangeKeyValue"
    handle_param: "Handle"
    operation: "read"
  - api_call_name: "^RegQueryInfoKey[AW]$"
    handle_param: "Handle"
    operation: "read"
  - api_call_name: "^RegQueryValue(Ex|)[AW]$"
    handle_param: "Handle"
    path_param: "ValueName"
    operation: "read"
  - api_call_name: "^RegSetValueEx[AW]$"
    handle_param: "Handle"
    path_param: "ValueName"
    operation: "write"
  - api_call_name: "^RegSetValue[AW]$"
    handle_param: "Handle"
    path_param: "SubKey"
    operation: "write"
  - api_call_name: "RegOpenCurrentUser"
    handle_id: 0x80000001
    handle_returned_in: "Handle"
    operation: "read"
# --------------------------------------------
# Network
# --------------------------------------------
network:
# Winsock2
  - api_call_name: "^WSASocket[AW]$"
    handle_returned_in: "socket"
    network_type: "connect"
    operation: "connect"
  - api_call_name: "^(connect|WSAConnect)$"
    handle_returned_in: "Socket"
    host_param: "sin_addr"
    port_param: "sin_port"
    network_type: "connect"
    operation: "read"
  - api_call_name: "ConnectEx"
    handle_returned_in: "socket"
    host_param: "ip"
    port_param: "port"
    network_type: "connect"
    operation: "read"
  - api_call_name: "^(recv|WSARecv)$"
    handle_param: "Socket"
    network_type: "connect"
    operation: "read"
  - api_call_name: "^(recvfrom|WSARecvFrom)$"
    handle_param: "Socket"
    network_type: "listen"
    operation: "read"
  - api_call_name: "sendto"
    handle_param: "Socket"
    network_type: "listen"
    operation: "read"
  - api_call_name: "^(send|WSASend)$"
    handle_param: "Socket"
    network_type: "connect"
    operation: "write"
  - api_call_name: "gethostbyname"
    dns_name_param: "return:h_name"
    dns_ip_param: "return:h_addr_list"
    network_type: "dns"
  - api_call_name: "getaddrinfo"
    dns_name_param: "NodeName"
    dns_ip_param: "ppResult:ai_addr:sin_addr"
    network_type: "dns"
#  - api_call_name: "bind"
#    handle_returned_in: "s"
#    host_param: "sin_addr"
#    port_param: "sin_port"
#    network_type: "listen"
#    operation: "create"
# Wininet
  - api_call_name: "^InternetConnect[AW]$"
    handle_returned_in: "return"
    host_param: "ServerName"
    port_param: "ServerPort"
    network_type: "connect"
    operation: "read"
  - api_call_name: "^InternetOpenUrl[AW]$"
    handle_returned_in: "return"
    url_param: "Url"
    network_type: "connect"
    operation: "read"
  - api_call_name: "^HttpOpenRequest[AW]$"
    handle_param: "InternetHandle"
    handle_returned_in: "return"
    request_param: "Path"
    network_type: "connect"
    operation: "read"
  - api_call_name: "^HttpQueryInfo[AW]$"
    handle_param: "RequestHandle"
    network_type: "connect"
    operation: "read"
  - api_call_name: "^HttpSendRequest(Ex|)[AW]$"
    handle_param: "RequestHandle"
    network_type: "connect"
    operation: "write"
  - api_call_name: "^HttpAddRequestHeaders[AW]$"
    handle_param: "RequestHandle"
    network_type: "connect"
    operation: "write"
  - api_call_name: "^InternetReadFile(Ex|)[AW]$"
    handle_param: "hFile"
    network_type: "connect"
    operation: "read"
  - api_call_name: "^InternetWriteFile(Ex|)[AW]$"
    handle_param: "hFile"
    network_type: "connect"
    operation: "write"
# Winhttp
  - api_call_name: "WinHttpConnect"
    handle_returned_in: "return"
    host_param: "ServerName"
    port_param: "ServerPort"
    network_type: "connect"
    operation: "read"
  - api_call_name: "WinHttpOpenRequest"
    handle_param: "InternetHandle"
    handle_returned_in: "return"
    request_param: "ObjectName"
    network_type: "connect"
    operation: "read"
  - api_call_name: "WinHttpQueryDataAvailable"
    handle_param: "InternetHandle"
    network_type: "connect"
    operation: "read"
  - api_call_name: "WinHttpQueryHeaders"
    handle_param: "InternetHandle"
    network_type: "connect"
    operation: "read"
  - api_call_name: "WinHttpReadData"
    handle_param: "InternetHandle"
    network_type: "connect"
    operation: "read"
  - api_call_name: "WinHttpReceiveResponse"
    handle_param: "InternetHandle"
    network_type: "connect"
    operation: "read"
  - api_call_name: "WinHttpSendRequest"
    handle_param: "InternetHandle"
    network_type: "connect"
    operation: "write"
# Urlmon
  - api_call_name: "^URLDownloadToFile[AW]$"
    url_param: "URL"
    network_type: "connect"
    operation: "read"
  - api_call_name: "IInternetProtocolRoot:Start"
    handle_param: "This"
    url_param: "szURL"
    network_type: "connect"
    operation: "read"
  - api_call_name: "IInternetProtocolRoot:Start"
    handle_param: "This"
    url_param: "szURL"
    network_type: "connect"
    operation: "read"
  - api_call_name: "IInternetSession:CreateBinding"
    handle_returned_in: "ppOInetProt"
    url_param: "szURL"
    handle_is_out: True
    network_type: "connect"
    operation: "read"

# --------------------------------------------
# Handle Closing
# --------------------------------------------
close:
# Filesystem
  - api_call_name: "^(Nt|Zw)Close$"
    handle_param: "Handle"
  - api_call_name: "CloseHandle"
    handle_param: "Handle"
  - api_call_name: "fclose"
    handle_param: "File"
  - api_call_name: "IUnknown:Release$"
    handle_param: "This"
# Registry
  - api_call_name: "RegCloseKey"
    handle_param: "Handle"
